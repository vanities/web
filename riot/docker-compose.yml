version: '3'

services:
  traefik:
    image: traefik:alpine
    volumes:
      - ./traefik.toml:/traefik.toml:ro
      - ./acme:/etc/traefik/acme
      - ./traefik_logs:/var/log
    ports:
      - 8080:8080/tcp
      - 80:80/tcp
      - 443:443/tcp
    command:
      - --web
      - --accessLog.filePath=/var/log/access.log
      - --accessLog.filters.statusCodes=400-499

  nginx:
    image: nginx:latest
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/letsencrypt
      - ./certs-data:/data/letsencrypt
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:riot.example.com"
      - "traefik.port=80"
      - "traefik.docker.network=web"
    depends_on:
      - synapse
      - traefik
    networks:
      - web

  riot:
    image: bubuntux/riot-web:latest
    hostname: riot
    restart: unless-stopped
    volumes:
      - ./config.json:/etc/riot-web/config.json:ro
    networks:
      - web

  # https://github.com/matrix-org/synapse/blob/master/contrib/docker/docker-compose.yml
  synapse:
    image: docker.io/matrixdotorg/synapse:latest
    hostname: synapse
    restart: unless-stopped
    environment:
      - SYNAPSE_CONFIG_PATH=/data/homeserver.yaml
      - SYNAPSE_SERVER_NAME=catwebm.com #${FQDN}
      - SYNAPSE_REPORT_STATS=yes
    volumes:
      - ./files:/data
    ports:
      - "8008:8008"
    labels:
      - traefik.enable=true
      - traefik.http.routers.http-synapse.entryPoints=http
      - traefik.http.routers.http-synapse.rule=Host(`catwebm.com`)
      - traefik.http.middlewares.https_redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https_redirect.redirectscheme.permanent=true
      - traefik.http.routers.http-synapse.middlewares=https_redirect
      - traefik.http.routers.https-synapse.entryPoints=https
      - traefik.http.routers.https-synapse.rule=Host(`catwebm.com`)
      - traefik.http.routers.https-synapse.service=synapse
      - traefik.http.routers.https-synapse.tls=true
      - traefik.http.services.synapse.loadbalancer.server.port=8008
      - traefik.http.routers.https-synapse.tls.certResolver=le-ssl
    depends_on:
      - db
    networks:
      - web

  db:
    image: docker.io/postgres:10-alpine
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=matrix
      - POSTGRES_PASSWORD=some-pass #${POSTGRES_PASSWORD}
      - POSTGRES_DB=matrix
      # ensure the database gets created correctly
      # https://github.com/matrix-org/synapse/blob/master/docs/postgres.md#set-up-database
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - ./schemas:/var/lib/postgresql/data
    networks:
      - web

networks:
  web:
